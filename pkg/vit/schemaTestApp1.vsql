-- Copyright (c) 2020-present unTill Pro, Ltd.
-- @author Denis Gribanov

APPLICATION app1();

ALTER WORKSPACE sys.UserProfileWS (
	TABLE Doc INHERITS sys.CDoc (
		EmailField varchar NOT NULL VERIFIABLE,
		PhoneField varchar,
		NonVerifiedField varchar
	);

	EXTENSION ENGINE BUILTIN ();

	GRANT SELECT, UPDATE, INSERT ON TABLE Doc TO sys.WorkspaceOwner;
);

ALTERABLE WORKSPACE test_wsWS_another (
	DESCRIPTOR test_ws_another ();

	TABLE docInAnotherWS INHERITS sys.CDoc();

	EXTENSION ENGINE BUILTIN (
		COMMAND testCmd();
	);
);

ALTERABLE WORKSPACE test_wsWS (

	DESCRIPTOR test_ws (
		IntFld int32 NOT NULL,
		StrFld varchar(1024)
	);

	TABLE articles INHERITS sys.CDoc (
		name varchar,
		article_manual int32 NOT NULL,
		article_hash int32 NOT NULL,
		hideonhold int32 NOT NULL,
		time_active int32 NOT NULL,
		control_active int32 NOT NULL,
		picture blob
	) WITH Tags=(WorkspaceOwnerTableTag, ApiArticlesFeatureTag);

	TABLE options INHERITS sys.CDoc () WITH Tags=(WorkspaceOwnerTableTag);

	TABLE department INHERITS sys.CDoc (
		pc_fix_button int32 NOT NULL,
		rm_fix_button int32 NOT NULL,
		id_food_group ref,
		department_options_2 TABLE department_options_2 (
		) WITH Tags=(WorkspaceOwnerTableTag),
		department_options TABLE department_options (
			id_department ref NOT NULL,
			id_options ref,
			option_number int32,
			option_type int32
		) WITH Tags=(WorkspaceOwnerTableTag)
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE air_table_plan INHERITS sys.CDoc (
		fstate int32,
		name varchar,
		ml_name bytes,
		num int32,
		width int32,
		height int32,
		image blob,
		is_hidden int32,
		preview blob,
		bg_color int32,
		air_table_plan_item TABLE air_table_plan_item (
			id_air_table_plan ref, --deprecated link to air_table_plan
			fstate int32,
			number int32,
			form int32 NOT NULL,
			top_c int32,
			left_c int32,
			angle int32,
			width int32,
			height int32,
			places int32,
			chair_type varchar,
			table_type varchar,
			type int32,
			color int32,
			code varchar,
			text varchar,
			hide_seats bool
		) WITH Tags=(WorkspaceOwnerTableTag)
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE printers INHERITS sys.CDoc (
		guid varchar NOT NULL,
		name varchar,
		id_printer_drivers ref,
		width int32,
		top_lines int32,
		bottom_lines int32,
		con int32,
		port int32,
		speed int32,
		backup_printer varchar,
		id_computers ref,
		error_flag int32 NOT NULL,
		codepage int32,
		null_print int32,
		fiscal int32,
		dont_auto_open_drawer int32,
		connection_type int32,
		printer_ip varchar,
		printer_port int32,
		cant_be_redirected_to int32,
		com_params bytes,
		printer_type int32,
		exclude_message int32,
		driver_kind int32,
		driver_id varchar,
		driver_params bytes,
		check_status int32,
		id_ordermans ref,
		id_falcon_terminals ref,
		hht_printer_port  int32,
		ml_name bytes,
		posprinter_driver_id varchar,
		posprinter_driver_params varchar,
		id_bill_ticket ref,
		id_order_ticket ref,
		purpose_receipt_enabled bool,
		purpose_preparation_enabled bool
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE sales_area INHERITS sys.CDoc (
		name varchar,
		bmanual int32 NOT NULL,
		id_prices ref,
		number int32,
		close_manualy int32,
		auto_accept_reservations int32,
		only_reserved int32,
		id_prices_original int64,
		group_vat_level int32,
		sc int64,
		sccovers int32,
		id_scplan ref,
		price_dt int64,
		sa_external_id varchar,
		is_default bool,
		id_table_plan ref
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE payments INHERITS sys.CDoc (
		name varchar,
		kind int32,
		number int32,
		psp_model int32,
		id_bookkp ref,
		id_currency ref,
		params varchar,
		driver_kind int32,
		driver_id varchar,
		guid varchar,
		ml_name bytes,
		paym_external_id varchar
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE untill_users INHERITS sys.CDoc (
		name varchar,
		mandates bytes,
		user_void int32 NOT NULL,
		user_code varchar,
		user_card varchar,
		language varchar,
		language_char int32,
		user_training int32,
		address varchar,
		id_countries ref,
		phone varchar,
		datebirth int64,
		insurance varchar,
		user_poscode varchar,
		terminal_id varchar,
		user_clock_in int32,
		user_poscode_remoteterm varchar,
		is_custom_remoteterm_poscode int32,
		id_group_users ref,
		tp_api_pwd varchar,
		firstname varchar,
		lastname varchar,
		user_transfer int32,
		personal_drawer int32,
		start_week_day int32,
		start_week_time int32,
		needcashdeclaration int32,
		smartcard_uid varchar,
		not_print_waiter_report int32,
		exclude_message int32,
		lefthand int32,
		login_message varchar,
		email varchar,
		number int32,
		hq_id varchar,
		void_number int32,
		last_update_dt int64,
		block_time_break int32,
		void_type int32,
		tpapi_permissions bytes,
		hide_wm int32,
		creation_date int64
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE computers INHERITS sys.CDoc (
		name varchar,
		show_cursor int32,
		on_hold int32,
		untillsrv_port int32,
		id_screen_groups ref,
		id_tickets_clock ref,
		guid_printers_clock varchar,
		keyboard_input_text int32,
		extra_data varchar,
		extra_data_new varchar,
		startup_message varchar,
		guid_cash_printers varchar,
		id_cash_tickets ref,
		term_uid int32,
		production_nr varchar,
		tpapi int32,
		ignore_prn_errors bytes,
		default_a4_printer varchar,
		login_screen int32,
		id_themes ref,
		device_profile_wsid int64,
		restaurant_computers TABLE restaurant_computers (
			id_computers ref NOT NULL,
			id_sales_area ref,
			sales_kind int32,
			id_printers_1 ref,
			keep_waiter int32,
			limited int32,
			id_periods ref,
			dbl int32,
			a4 int32,
			id_screens_part ref,
			id_screens_order ref,
			id_screens_supplement ref,
			id_screens_condiment ref,
			id_screens_payment ref,
			id_tickets_bill ref,
			id_printers_proforma ref,
			id_tickets_proforma ref,
			direct_table int32,
			start_table int32,
			id_psp_layout ref,
			id_deposit_layout ref,
			id_deposit_printer ref,
			id_invoice_layout ref,
			id_rear_disp_printer ref,
			id_rear_disp_article_layout ref,
			id_rear_disp_bill_layout ref,
			id_journal_printer ref,
			auto_logoff_sec int32,
			id_tickets_journal ref,
			future_table int32,
			id_beco_location ref,
			id_tickets_order_journal ref,
			id_tickets_control_journal ref,
			id_drawer_layout ref,
			table_info varchar,
			table_pc_font bytes,
			table_hht_font bytes,
			id_return_layout ref,
			id_inout_layout ref,
			id_inout_printer ref,
			id_rent_layout ref,
			id_rent_printer ref,
			id_tickets_preauth ref,
			id_oif_preparation_area ref,
			id_reprint_order ref,
			id_rear_screen_saver ref,
			screen_saver_min int32,
			notprintlogoff int32,
			notprintnoorder int32,
			block_new_client int32,
			id_init_ks ref,
			id_tickets_giftcards ref,
			id_printers_giftcards ref,
			t2o_prepaid_tablenr int32,
			t2o_groups_table_from int32,
			t2o_groups_table_till int32,
			t2o_clients_table_from int32,
			t2o_clients_table_till int32,
			ao_order_direct_sales int32,
			ao_order_to_table int32,
			ao_table_nr int32,
			not_logoff_hht int32,
			id_printers_voucher ref,
			id_tickets_voucher ref,
			id_email_invoice_layout ref,
			id_printers_manager ref,
			id_tickets_manager ref,
			id_stock_location ref,
			on_hold_printing int32,
			id_ticket_voucher_bunch ref,
			id_ticket_voucher_bill ref,
			id_stock_printer ref,
			id_coupon_layout ref,
			id_printers_taorder ref,
			id_tickets_taorder ref,
			id_second_article_layout ref,
			second_article_delay_sec int32,
			id_printers_void ref,
			id_tickets_void ref,
			id_tickets_fiscal_footer ref,
			temp_orders_table_from int32,
			temp_orders_table_to int32,
			id_init_ksc ref,
			use_word_template_print_invoice int32,
			id_ta_total_layout ref,
			notify_blocked_card int32,
			id_printers_reopen ref,
			id_tickets_reopen ref,
			notify_blocked_card_layer int32,
			id_tickets_prof_fiscal_footer ref,
			id_tickets_giftcardsbill ref,
			id_printers_giftcardsbill ref
		) WITH Tags=(WorkspaceOwnerTableTag)
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE bill INHERITS sys.CDoc (
		tableno int32 NOT NULL,
		id_untill_users ref NOT NULL,
		table_part varchar NOT NULL,
		id_courses ref,
		id_clients ref,
		name varchar,
		proforma int32 NOT NULL,
		modified int64,
		open_datetime int64,
		close_datetime int64,
		number int32,
		failurednumber int32,
		suffix varchar,
		pbill_number int32,
		pbill_failurednumber int32,
		pbill_suffix varchar,
		hc_foliosequence int32,
		hc_folionumber varchar,
		tip int64,
		qty_persons int32,
		isdirty int32,
		reservationid varchar,
		id_alter_user ref,
		service_charge float64,
		number_of_covers int32,
		id_user_proforma ref,
		bill_type int32,
		locker int32,
		id_time_article ref,
		timer_start int64,
		timer_stop int64,
		isactive int32,
		table_name varchar,
		group_vat_level int32,
		comments varchar,
		id_cardprice ref,
		discount float64,
		discount_value int64,
		id_discount_reasons ref,
		hc_roomnumber varchar,
		ignore_auto_sc int32,
		extra_fields bytes,
		id_bo_service_charge ref,
		free_comments varchar,
		id_t2o_groups ref,
		service_tax int64,
		sc_plan bytes,
		client_phone varchar,
		age int64,
		description bytes,
		sdescription varchar,
		vars bytes,
		take_away int32,
		fiscal_number int32,
		fiscal_failurednumber int32,
		fiscal_suffix varchar,
		id_order_type ref,
		not_paid int64,
		total int64,
		was_cancelled int32,
		id_callers_last ref,
		id_serving_time ref,
		serving_time_dt int64,
		vat_excluded int32,
		day_number int32,
		day_failurednumber int32,
		day_suffix varchar,
		ayce_time int64,
		remaining_quantity float64,
		working_day varchar
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE pos_emails INHERITS sys.CDoc (
		kind int32,
		email varchar,
		description varchar
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE category INHERITS sys.CDoc (
		name varchar,
		hq_id varchar,
		ml_name bytes,
		cat_external_id varchar,
		int_fld1 int32,
		int_fld2 int32
	) WITH Tags=(WorkspaceOwnerTableTag, ApiFeatureTag);

	-- TABLE Doc INHERITS sys.CDoc (
	-- 	EmailField varchar NOT NULL VERIFIABLE,
	-- 	PhoneField varchar,
	-- 	NonVerifiedField varchar
	-- ) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE DocConstraints INHERITS sys.CDoc (
		Int int32,
		Str varchar(65535) NOT NULL,
		Bool bool NOT NULL,
		Float32 float32,
		Bytes bytes(65535) NOT NULL,
		UNIQUE (Int, Str, Bool, Bytes)
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE DocConstraintsString INHERITS sys.CDoc (
		Str varchar,
		Int int32,
		UNIQUE ("Str")
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE DocManyTypes INHERITS sys.CDoc (
		Int int32,
		Int64 int64,
		Float32 float32,
		Float64 float64,
		Str varchar,
		Bytes bytes,
		Bool bool
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE DocConstraintsFewUniques INHERITS sys.CDoc (
		Int1 int32,
		Str1 varchar,
		Bool1 bool,
		Bytes1 bytes,
		Int2 int32,
		Str2 varchar,
		Bool2 bool,
		Bytes2 bytes,
		UNIQUE ("Int1", "Str1", "Bool1", "Bytes1"),
		CONSTRAINT uniq1 UNIQUE ("Int2", "Str2", "Bool2", "Bytes2")
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE DocConstraintsOldAndNewUniques INHERITS sys.CDoc (
		Str varchar,
		Int int32,
		UNIQUE (Str),
		UNIQUEFIELD Int
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE Config INHERITS sys.CSingleton (
		Fld1 varchar NOT NULL
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE cdoc1 INHERITS sys.CDoc () WITH Tags=(WorkspaceOwnerTableTag);

	TABLE cdoc2 INHERITS sys.CDoc (
		field1 ref, -- war RecordID, should be denied to create RecordID field -> ref type for now
		field2 ref(cdoc1, department),
		field3 ref
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE odoc1 INHERITS sys.ODoc (
		odocIntFld int32,
		orecord1 TABLE orecord1(
			orecord1IntFld int32,
			orecord2 TABLE orecord2(
				orecord2IntFld int32
			)
		) WITH Tags=(WorkspaceOwnerTableTag)
	) WITH Tags=(WorkspaceOwnerTableTag);

	TABLE odoc2 INHERITS sys.ODoc (
		refToODoc1 ref(odoc1),
		refToORecord1 ref(orecord1),
		refToORecord2 ref(orecord2),
		refToAny ref,
		refToCDoc1 ref(cdoc1),
		refToCDoc1OrODoc1 ref(cdoc1, odoc1)
	) WITH Tags=(WorkspaceOwnerTableTag);

	TYPE RatedQryParams (
		Fld text
	);

	TYPE RatedQryResult(
		Fld text -- not used
	);

	TYPE RatedCmdParams (
		Fld text
	);

	TYPE MockQryParams (
		Input text NOT NULL
	);

	TYPE MockQryResult (
		Res text NOT NULL
	);

	TYPE MockCmdParams(
		Input text NOT NULL
	);

	TYPE TestCmdParams (
		Arg1 int32 NOT NULL
	);

	TYPE TestCmdResult (
		Int int32 NOT NULL,
		Str text
	);

	VIEW View (
		ViewIntFld int32 NOT NULL,
		ViewStrFld text NOT NULL,
		ViewByteFld bytes(512),
		PRIMARY KEY ((ViewIntFld), ViewStrFld)
	) AS RESULT OF ProjDummy WITH Tags=(WorkspaceOwnerTableTag);

	VIEW CategoryIdx (
		Name varchar,
		Dummy int32,
		IntFld int32,
		Val int32,
		offs int64,
		PRIMARY KEY ((IntFld), Dummy)
	) AS RESULT OF ApplyCategoryIdx WITH Tags=(WorkspaceOwnerTableTag);

	VIEW DailyIdx (
    	Year int32,
    	Month int32,
    	Day int32,
    	StringValue text,
    	offs int64,
    	PRIMARY KEY ((Year), Month, Day)
    ) AS RESULT OF ApplyDailyIdx WITH Tags=(WorkspaceOwnerTableTag);

    TABLE Daily INHERITS sys.CDoc (
    	Year int32,
    	Month int32,
    	Day int32,
    	StringValue text
    ) WITH Tags=(WorkspaceOwnerTableTag);

	TYPE QryIntentsResult (
		Fld1 varchar
	);

	TYPE WithResponseIntentParams (
		StatusCodeToReturn int32 NOT NULL
	);

	TYPE QryWithResponseIntentResult (
		Dummy int32
	);

	TABLE JobTable INHERITS sys.CDoc (
		Str1 varchar NOT NULL
	) WITH Tags=(WorkspaceOwnerTableTag);

	-- all denied for all
	TABLE TestDeniedCDoc INHERITS sys.CDoc (
		Fld1 int32
	);

	TABLE TestCDocWithDeniedFields INHERITS sys.CDoc (
		Fld1 int32,
		DeniedFld2 int32 -- denied field, no grants
	);

	TABLE DocActivateDenied INHERITS sys.CDoc (
		Fld1 int32
	);
	TABLE DocDeactivateDenied INHERITS sys.CDoc (
		Fld1 int32
	);

	TABLE DocFieldInsertDenied INHERITS sys.CDoc (
		FldDenied int32,
		FldAllowed int32
	);

	TABLE DocFieldUpdateDenied INHERITS sys.CDoc (
		FldDenied int32,
		FldAllowed int32
	);

	TABLE Root INHERITS sys.CDoc (
		FldRoot int32,
		Nested TABLE Nested (
			FldNested int32,
			Third TABLE Third (
				Fld1 int32
			)
		)
	);

	TYPE QryDailyIdxParams (
		Year int32 NOT NULL,
		Month int32,
		Day int32
	);

	TYPE QryDailyIdxResult (
		Year int32,
		Month int32,
		Day int32,
		StringValue text
	);

	TYPE QryReturnsCategoryResult (
		CategoryID ref(category)
	);

	TYPE QryReturnsCategoryParams (
		CategoryID int64
	);

    TABLE Country INHERITS sys.CDoc (
        Name text
    );

    TABLE Currency INHERITS sys.CDoc (
        CharCode text,
        Code int32
    ) WITH Tags=(ApiCirrencyFeatureTag);

    TABLE Wallet INHERITS sys.WDoc (
        Balance int64,
        Currency ref(Currency),
        Capabilities ref(Capabilities)
    );

    TABLE Capabilities INHERITS sys.WDoc (
        Withdraw bool,
        Deposit bool
    );

    TABLE Client INHERITS sys.WDoc (
        FirstName text,
        LastName text,
        DOB int64,
        Wallet ref(Wallet),
        Country ref(Country)
    );

    VIEW Clients (
        Year int32,
        Month int32,
        Day int32,
        Client ref(Client),
        offs int64,
        PRIMARY KEY ((Year, Month), Day, Client)
    ) AS RESULT OF ApplyClient WITH Tags=(WorkspaceOwnerTableTag, ApiFeatureTag);

    TABLE Batch INHERITS sys.CDoc (
        Cfg ref(Cfg),
        Number int32,
        GroupA Task,
        GroupB Task
    ) WITH Tags=(WorkspaceOwnerTableTag, ApiFeatureTag);

    TABLE Cfg INHERITS sys.CDoc (
        Name text
    );

    TABLE Task INHERITS sys.CRecord (
        Cfg ref(Cfg),
        Name text,
        GroupA Task,
        GroupB Task
    );

	TABLE DocWithBLOB INHERITS sys.CDoc (
		Blob blob,
		AnotherBlob blob,
		IntFld int32,
		BlobReadDenied blob
	);

	TABLE ODocWithBLOB INHERITS sys.ODoc (
		Blob blob,
		IntFld int32
	);

	TABLE AllDataKindsUnique INHERITS sys.CDoc (
		Int8Fld int8,
		Int16Fld int16,
		Int32Fld int32,
		Int64Fld int64,
		Float32Fld float32,
		Float64Fld float64,
		RefFld ref,
		StrFld text,
		QNameFld qname,
		BoolFld bool,
		BytesFld bytes,
		UNIQUE (Int8Fld, Int16Fld, Int32Fld, Int64Fld, Float32Fld, Float64Fld, RefFld, StrFld, QNameFld, BoolFld, BytesFld)
	);

	EXTENSION ENGINE BUILTIN (
		QUERY RatedQry(RatedQryParams) RETURNS RatedQryResult WITH Tags=(WorkspaceOwnerFuncTag);
		QUERY MockQry(MockQryParams) RETURNS MockQryResult WITH Tags=(WorkspaceOwnerFuncTag);
		QUERY QryIntents() RETURNS QryIntentsResult WITH Tags=(WorkspaceOwnerFuncTag);

		COMMAND RatedCmd(RatedCmdParams) WITH Tags=(WorkspaceOwnerFuncTag);
		COMMAND MockCmd(MockCmdParams) WITH Tags=(WorkspaceOwnerFuncTag);
		COMMAND TestCmd(TestCmdParams) RETURNS TestCmdResult WITH Tags=(WorkspaceOwnerFuncTag);

		COMMAND TestDeniedCmd;
		QUERY TestDeniedQuery() RETURNS TestCmdResult;

		COMMAND CmdODocOne(odoc1) WITH Tags=(WorkspaceOwnerFuncTag, ApiFeatureTag);
		COMMAND CmdODocTwo(odoc2, UNLOGGED odoc2) WITH Tags=(WorkspaceOwnerFuncTag);

		COMMAND TestCmdRawArg(sys.Raw) WITH Tags=(WorkspaceOwnerFuncTag);
		PROJECTOR ProjDummy AFTER INSERT ON (sys.CRecord) INTENTS(sys.View(View)); -- does nothing, only to define view.app1pkg.View
		SYNC PROJECTOR ApplyCategoryIdx AFTER INSERT ON (category) INTENTS(sys.View(CategoryIdx));
		SYNC PROJECTOR ApplyDailyIdx AFTER INSERT ON (Daily) INTENTS(sys.View(DailyIdx));
		PROJECTOR ApplyClient AFTER INSERT ON (Client) INTENTS(sys.View(Clients));

		COMMAND CmdWithResponseIntent(WithResponseIntentParams) WITH Tags=(WorkspaceOwnerFuncTag);
		QUERY QryWithResponseIntent(WithResponseIntentParams) RETURNS QryWithResponseIntentResult WITH Tags=(WorkspaceOwnerFuncTag);
		QUERY QryDailyIdx(QryDailyIdxParams) RETURNS QryDailyIdxResult WITH Tags=(WorkspaceOwnerFuncTag);
		QUERY QryReturnsCategory(QryReturnsCategoryParams) RETURNS QryReturnsCategoryResult WITH Tags=(WorkspaceOwnerFuncTag, ApiFeatureTag);
		QUERY QryVoid RETURNS void;
		COMMAND CmdODocWithBLOB(ODocWithBLOB) WITH Tags=(WorkspaceOwnerFuncTag);
	);

	ROLE Updated; -- need for invite tests
	ROLE SpecialAPITokenRole; -- need to test foreign auth using APIToken
	ROLE LimitedAccessRole; -- need to test ACL

	TAG WorkspaceOwnerTableTag;
	TAG WorkspaceOwnerFuncTag;
	TAG ApiFeatureTag FEATURE 'Backoffice API';
	TAG ApiCirrencyFeatureTag FEATURE 'Backoffice: Currency';
	TAG ApiArticlesFeatureTag FEATURE 'Backoffice: Articles';

	/* ApiRole is used for testing API access */
	PUBLISHED ROLE ApiRole;
	GRANT SELECT, INSERT, UPDATE, ACTIVATE, DEACTIVATE ON TABLE Currency TO ApiRole;
	GRANT SELECT ON TABLE category TO ApiRole;
	GRANT SELECT, INSERT ON TABLE articles TO ApiRole;
	GRANT INSERT ON TABLE orecord1 TO ApiRole;
	GRANT EXECUTE ON COMMAND CmdODocOne TO ApiRole;
	GRANT EXECUTE ON QUERY QryReturnsCategory TO ApiRole;
	GRANT SELECT ON VIEW Clients TO ApiRole;

	GRANT SELECT, UPDATE, INSERT ON TABLE Root TO sys.WorkspaceOwner;
	GRANT SELECT, UPDATE, INSERT ON TABLE Nested TO sys.WorkspaceOwner;
	GRANT SELECT, UPDATE, INSERT ON TABLE Third TO sys.WorkspaceOwner;

	GRANT SELECT, UPDATE ON TABLE test_ws TO sys.WorkspaceOwner;

	GRANT EXECUTE ON QUERY sys.Collection TO SpecialAPITokenRole;
	GRANT SELECT ON TABLE articles TO SpecialAPITokenRole;

	GRANT SELECT, INSERT, UPDATE, ACTIVATE, DEACTIVATE ON ALL TABLES WITH TAG WorkspaceOwnerTableTag TO sys.WorkspaceOwner;

	GRANT EXECUTE ON ALL QUERIES WITH TAG WorkspaceOwnerFuncTag TO sys.WorkspaceOwner;
	GRANT EXECUTE ON ALL COMMANDS WITH TAG WorkspaceOwnerFuncTag TO sys.WorkspaceOwner;

	GRANT SELECT(Fld1) ON TABLE TestCDocWithDeniedFields TO sys.WorkspaceOwner;

	GRANT SELECT ON VIEW CategoryIdx TO sys.WorkspaceOwner;
	GRANT SELECT ON VIEW DailyIdx TO sys.WorkspaceOwner;
	GRANT SELECT ON VIEW Clients TO sys.WorkspaceOwner;
	GRANT SELECT(Year, Month, Day, offs) ON VIEW DailyIdx TO LimitedAccessRole;

	GRANT EXECUTE ON QUERY QryVoid TO sys.WorkspaceOwner;

	GRANT SELECT ON TABLE DocWithBLOB TO sys.WorkspaceOwner;
	GRANT SELECT ON TABLE Country TO sys.WorkspaceOwner;
	GRANT SELECT ON TABLE ODocWithBLOB TO sys.WorkspaceOwner;

	GRANT SELECT, INSERT, UPDATE ON TABLE DocActivateDenied TO sys.WorkspaceOwner;
	GRANT SELECT, INSERT, UPDATE ON TABLE DocDeactivateDenied TO sys.WorkspaceOwner;
	GRANT SELECT, INSERT, UPDATE ON TABLE DocFieldInsertDenied TO sys.WorkspaceOwner;
	GRANT SELECT, INSERT, UPDATE ON TABLE DocFieldUpdateDenied TO sys.WorkspaceOwner;
	REVOKE INSERT(FldDenied) ON TABLE DocFieldInsertDenied FROM sys.WorkspaceOwner;
	REVOKE UPDATE(FldDenied) ON TABLE DocFieldUpdateDenied FROM sys.WorkspaceOwner;

	REVOKE SELECT(BlobReadDenied) ON TABLE DocWithBLOB FROM sys.WorkspaceOwner;
);
