name: CI changes in pkg/istorage

on:
  push:
    paths:
      - 'pkg/istorage/**'
  pull_request_target:
    paths:
      - 'pkg/istorage/**'

jobs:

  determine_changes:         
    runs-on: ubuntu-latest
    outputs:
      cas_changed: ${{ steps.filter.outputs.cas_changed }}
      amazon_changed: ${{ steps.filter.outputs.amazon_changed }}
      others_changed: ${{ steps.filter.outputs.others_changed }}
    steps:
      - name: Checkout repository (for PRs)
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2  # Fetch history
          fetch-tags: false  # Avoid unnecessary tag fetch
          fetch-depth: 0  # Ensures full history for diff
          
      - name: Fetch base branch
        if: github.event_name == 'pull_request_target'
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1

      - name: Checkout repository (for pushes)
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure we have history for comparison

      - name: Check changed files
        id: filter
        run: |
          CAS_CHANGED=false
          AMAZON_CHANGED=false
          OTHERS_CHANGED=false

          # Get changed files between PR branch and base branch
          if [ "${{ github.event_name }}" = "pull_request_target" ]; then
            CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }})
          else
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          fi

          for FILE in $CHANGED_FILES; do
            case "$FILE" in
              pkg/istorage/cas/*)
                CAS_CHANGED=true
                ;;
              pkg/istorage/amazondb/*)
                AMAZON_CHANGED=true
                ;;
              pkg/istorage/*) 
                # If changes are in another subdirectory under pkg/istorage (e.g., bbolt, mem, provider)
                OTHERS_CHANGED=true
                ;;
            esac
          done

          echo "cas_changed=$CAS_CHANGED" >> $GITHUB_OUTPUT
          echo "amazon_changed=$AMAZON_CHANGED" >> $GITHUB_OUTPUT
          echo "others_changed=$OTHERS_CHANGED" >> $GITHUB_OUTPUT

  trigger_cas:
    needs: determine_changes
    if: (needs.determine_changes.outputs.cas_changed == 'true' && needs.determine_changes.outputs.amazon_changed == 'false') || (needs.determine_changes.outputs.others_changed == 'true')
    uses: ./.github/workflows/ci_cas.yml
    secrets:
      personaltoken: ${{ secrets.REPOREADING_TOKEN }}

  trigger_amazon:
    needs: determine_changes
    if: (needs.determine_changes.outputs.amazon_changed == 'true' && needs.determine_changes.outputs.cas_changed == 'false') || (needs.determine_changes.outputs.others_changed == 'true')
    uses: ./.github/workflows/ci_amazon.yml
    secrets:
      personaltoken: ${{ secrets.REPOREADING_TOKEN }}

  auto-merge-pr-amazon:
    needs: [trigger_amazon]
    if: ${{ github.event_name == 'pull_request_target'  }}
    uses: ./.github/workflows/merge.yml
    secrets:
      personaltoken: ${{ secrets.REPOREADING_TOKEN }}

  auto-merge-pr-cas:
    needs: [trigger_cas]
    if: ${{ github.event_name == 'pull_request_target'}}
    uses: ./.github/workflows/merge.yml
    secrets:
      personaltoken: ${{ secrets.REPOREADING_TOKEN }}

